<!DOCTYPE html>
<html>
<head>
<meta charset=UTF-8>
<title>Flappy Cool S</title>
<style>@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');body{margin:0;text-align:center;font-family:'Press Start 2P',cursive;user-select:none}header{margin:0 auto;width:431px}h1{background:url(" ") 0 340px;padding:1.2rem 0;margin:0}.score-container{display:flex;justify-content:space-between;padding:8px 6px;background:#5ee270}canvas{background:#4ec0ca;display:block;margin:auto}</style>
</head>
<body>
<header>
<h1>Flappy Cool S</h1>
<div class=score-container>
<div id=bestScore>Best: 0</div>
<div id=currentScore>Current: 0</div>
</div>
</header>
<canvas id=canvas width=431 height=504></canvas>
<script>const canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');const img=new Image();img.src="https://i.im.ge/2023/04/23/LCnsWJ.FLOPPY.png";let gamePlaying=false;const gravity=.5;const speed=6.2;const size=[51,36];const jump=-11.5;const cTenth=(canvas.width/10);let index=0,bestScore=0,flight,flyHeight,currentScore,pipe;const pipeWidth=78;const pipeGap=270;const pipeLoc=()=>(Math.random()*((canvas.height-(pipeGap+pipeWidth))-pipeWidth))+pipeWidth;const setup=()=>{currentScore=0;flight=jump;flyHeight=(canvas.height/2)-(size[1]/2);pipes=Array(3).fill().map((a,i)=>[canvas.width+(i*(pipeGap+pipeWidth)),pipeLoc()]);}
const render=()=>{index++;ctx.drawImage(img,0,0,canvas.width,canvas.height,-((index*(speed/2))%canvas.width)+canvas.width,0,canvas.width,canvas.height);ctx.drawImage(img,0,0,canvas.width,canvas.height,-(index*(speed/2))%canvas.width,0,canvas.width,canvas.height);if(gamePlaying){pipes.map(pipe=>{pipe[0]-=speed;ctx.drawImage(img,432,588-pipe[1],pipeWidth,pipe[1],pipe[0],0,pipeWidth,pipe[1]);ctx.drawImage(img,432+pipeWidth,108,pipeWidth,canvas.height-pipe[1]+pipeGap,pipe[0],pipe[1]+pipeGap,pipeWidth,canvas.height-pipe[1]+pipeGap);if(pipe[0]<=-pipeWidth){currentScore++;bestScore=Math.max(bestScore,currentScore);pipes=[...pipes.slice(1),[pipes[pipes.length-1][0]+pipeGap+pipeWidth,pipeLoc()]];console.log(pipes);}
if([pipe[0]<=cTenth+size[0],pipe[0]+pipeWidth>=cTenth,pipe[1]>flyHeight||pipe[1]+pipeGap<flyHeight+size[1]].every(elem=>elem)){gamePlaying=false;setup();}})}
if(gamePlaying){ctx.drawImage(img,432,Math.floor((index%9)/3)*size[1],...size,cTenth,flyHeight,...size);flight+=gravity;flyHeight=Math.min(flyHeight+flight,canvas.height-size[1]);}else{ctx.drawImage(img,432,Math.floor((index%9)/3)*size[1],...size,((canvas.width/2)-size[0]/2),flyHeight,...size);flyHeight=(canvas.height/2)-(size[1]/2);ctx.fillText(`Best score:${bestScore}`,85,245);ctx.fillText('Click to play',90,535);ctx.font="bold 30px courier";}
document.getElementById('bestScore').innerHTML=`Best:${bestScore}`;document.getElementById('currentScore').innerHTML=`Current:${currentScore}`;window.requestAnimationFrame(render);}
setup();img.onload=render;document.addEventListener('click',()=>gamePlaying=true);window.onclick=()=>flight=jump;</script>
</body>
</html>